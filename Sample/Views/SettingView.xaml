<UserControl x:Class="Sample.Views.SettingView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:actions="clr-namespace:Ark.WPF.Infra.Interactivity.Actions;assembly=Ark.WPF.Infra"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:modern_controls="clr-namespace:Ark.WPF.Modern.Controls;assembly=Ark.WPF.Modern"
             xmlns:view_models="clr-namespace:Sample.ViewModels"
             xmlns:views="clr-namespace:Sample.Views">

    <UserControl.Resources>
        <view_models:SettingViewModel x:Key="vm" />
    </UserControl.Resources>

    <UserControl.DataContext>
        <Binding Source="{StaticResource vm}" />
    </UserControl.DataContext>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <actions:CommandTriggerAction Command="{Binding LoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid Margin="4">
        <Grid.Resources>
            <Style TargetType="{x:Type TabItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Grid>
                                <Border Name="Border"
                                        Margin="0,0,12,6"
                                        Background="{TemplateBinding Background}">
                                    <ContentPresenter x:Name="ContentSite"
                                                      Margin="12,2,12,2"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      ContentSource="Header"
                                                      RecognizesAccessKey="True"
                                                      TextBlock.FontSize="14" />
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="TextBlock.Foreground"
                        Value="{DynamicResource ColorInverseTheme}" />
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="Opacity"
                        Value="{DynamicResource NormalOpacity}" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                             Value="True">
                        <Setter Property="TextBlock.Foreground"
                                Value="{StaticResource ColorWhite}" />
                        <Setter Property="Background"
                                Value="{DynamicResource ColorMain}" />
                    </Trigger>
                    <Trigger Property="IsSelected"
                             Value="True">
                        <Setter Property="TextBlock.Foreground"
                                Value="{StaticResource ColorWhite}" />
                        <Setter Property="Background"
                                Value="{DynamicResource ColorMain}" />
                    </Trigger>
                    <Trigger Property="IsEnabled"
                             Value="False">
                        <Setter Property="TextBlock.Foreground"
                                Value="{StaticResource ColorLightGray}" />
                        <Setter Property="Background"
                                Value="{StaticResource ColorGray}" />
                    </Trigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                       Value="False" />
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                       Value="False" />
                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                       Value="True" />
                            <Condition Value="True">
                                <Condition.Binding>
                                    <MultiBinding Converter="{StaticResource CheckTwoColorsConverter}">
                                        <Binding Path="ThemeSetting.MainTheme" />
                                        <Binding Source="{StaticResource ColorWhite}" />
                                    </MultiBinding>
                                </Condition.Binding>
                            </Condition>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Opacity"
                                Value="{DynamicResource FocusOpacity}" />
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ContentStyle"
                   TargetType="{x:Type UserControl}">
                <Style.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                 From="0"
                                                 To="1"
                                                 Duration="0:0:0.2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Style.Triggers>
            </Style>
            <Style BasedOn="{StaticResource ContentStyle}"
                   TargetType="{x:Type views:ThemeSettingView}" />

        </Grid.Resources>

        <TabControl Margin="0"
                    Padding="10,4,4,4"
                    Background="Transparent"
                    BorderBrush="{DynamicResource ColorGray}"
                    BorderThickness="1,0,0,0"
                    TabStripPlacement="Left">
            <TabItem Header="外観">
                <views:ThemeSettingView DataContext="{Binding ThemeSetting}" />
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>