<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Ark.WPF.Modern;component/Resources/ColorResource.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="CaptionButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Foreground"
                Value="{DynamicResource ColorMain}" />
        <Setter Property="FontFamily"
                Value="Marlett" />
        <Setter Property="FontSize"
                Value="14" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="8,7,7,7" />
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="IsHitTestVisible"
                Value="True" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Width="28"
                            Height="28"
                            Background="Transparent"
                            SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="border">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.4" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="border">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Background).Color"
                                                                      Storyboard.TargetName="border">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{Binding Source={StaticResource ColorLightGray},Path=Color}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="border">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Background).Color"
                                                                      Storyboard.TargetName="border">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{Binding Source={StaticResource ColorGray},Path=Color}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="border">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Foreground).Color">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{Binding Source={StaticResource ColorGray},Path=Color}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition  Binding="{Binding WindowState,RelativeSource={RelativeSource AncestorType=Window}}"
                                Value="Maximized" />
                    <Condition Binding="{Binding Content,RelativeSource={RelativeSource Self}}"
                               Value="1" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Visibility"
                            Value="Collapsed" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition  Binding="{Binding WindowState,RelativeSource={RelativeSource AncestorType=Window}}"
                                Value="Normal" />
                    <Condition Binding="{Binding Content,RelativeSource={RelativeSource Self}}"
                               Value="2" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Visibility"
                            Value="Collapsed" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>